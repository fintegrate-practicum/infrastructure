version: '3.8'
services:
  communication:
    build:
      context: ../communication
      dockerfile: Dockerfile.prod 
    environment:
      DATABASE_URI: ${MONGO_URI}
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
      AMQP_USERNAME: ${AMQP_USERNAME}
      AMQP_PASSWORD: ${AMQP_PASSWORD}
      URL: ${AMQP_URL}
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_EMAIL: ${MAILGUN_EMAIL}
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      MONGODB_URI: ${MONGODB_URI}
    ports:
      - 4001:4000
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped

  infra:
    build:
      context: ../infra
      dockerfile: Dockerfile.prod 
    environment:
      MONGODB_CONNECTION: ${MONGO_URI}
      MONGODB_URI: ${MONGODB_URI}
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_ISSUER_BASE_URL: ${AUTH0_ISSUER_BASE_URL}
      AMQP_PORT: ${AMQP_PORT}
      AMQP_HOST: ${AMQP_HOST}
      AMQP_USERNAME: ${AMQP_USERNAME}
      AMQP_PASSWORD: ${AMQP_PASSWORD}
    ports:
      - 4002:4000
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped

  inventory:
    build:
      context: ../inventory
      dockerfile: Dockerfile.prod  
    environment:
      MONGO_URI: ${MONGO_URI}
      DB_NAME: ${DB_NAME}
    ports:
      - 4003:4000
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped

  # orders:
  #   build:
  #     context: ../orders
  #     dockerfile: Dockerfile.prod 
  #   environment:
  #     MONGODB_CONNECTION: ${MONGO_URI}
  #     MAILGUN_EMAIL: ${MAILGUN_EMAIL}
  #     BASE_URL: ${baseURL}
  #     AMQP_PORT: ${AMQP_PORT}
  #     AMQP_HOST: ${AMQP_HOST}
  #     AMQP_USERNAME: ${AMQP_USERNAME}
  #     AMQP_PASSWORD: ${AMQP_PASSWORD}
  #     MONGODB_URI: ${MONGODB_URI}
  #   ports:
  #     - 4004:4000
  #   networks:
  #     - nesjs-network
  #   depends_on:
  #     - mongodb
  #   restart: unless-stopped

  # website:
  #   build:
  #     context: ../website
  #     dockerfile: Dockerfile.prod 
  #   environment:
  #     REACT_APP_API_URL: ${REACT_APP_API_URL}
  #     VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
  #     VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
  #     VITE_AUTH0_AUDIENCE: ${VITE_AUTH0_AUDIENCE}
  #     VITE_INFRA_SERVER_URL: ${VITE_INFRA_SERVER_URL}
  #     VITE_WORKERS_SERVER_URL: ${VITE_WORKERS_SERVER_URL}
  #     VITE_SERVER_URL: ${VITE_SERVER_URL}
  #     VITE_BUSINESSID: ${VITE_BUSINESSID}
  #     VITE_MANAGERID: ${VITE_MANAGERID}
  #     VITE_BASE_API_URL: ${VITE_BASE_API_URL}
  #     VITE_HTTP: ${VITE_HTTP}
  #   ports:
  #     - 4005:5173
  #   networks:
  #     - nesjs-network
  #   depends_on:
  #     - mongodb
  #   restart: unless-stopped

  workers:
    build:
      context: ../workers
      dockerfile: Dockerfile.prod  
    environment:
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
      AMQP_PASSWORD: ${AMQP_PASSWORD}
      AMQP_USERNAME: ${AMQP_USERNAME}
      AMQP_URL: ${AMQP_URL}
      AMQP_HOST: ${AMQP_HOST}
      AMQP_PORT: ${AMQP_PORT}
      MONGODB_CONNECTION: ${MONGODB_CONNECTION}
      AUTH0_ISSUER_BASE_URL: ${AUTH0_ISSUER_BASE_URL}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
    ports:
      - 4006:3001
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ./database:/data/db
    networks:
      - nesjs-network
    restart: always

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${AMQP_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
    ports:
      - "${AMQP_PORT}:5672"
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq
      - ./rabbitmq/log/:/var/log/rabbitmq
    networks:
      - nesjs-network
    restart: always

networks:
  nesjs-network:
    driver: bridge
