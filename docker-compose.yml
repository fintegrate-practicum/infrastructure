version: '3.8'
services:
  communication:
    build:
      context: ../communication
      dockerfile: Dockerfile
    environment:
      MONGODB_URI: ${MONGO_URI}
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
      AMQP_USERNAME: ${AMQP_USERNAME}
      AMQP_PASSWORD: ${AMQP_PASSWORD}
      AMQP_URL: ${AMQP_URL}
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_EMAIL: ${MAILGUN_EMAIL}
      MAILGUN_DOMAIN: ${MAILGUN_DOMAIN}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      
    ports:
      - 4001:4000
      - 9229:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped
    volumes:
      - ../communication:/app
      - /app/node_modules


  infra:
    build:
      context: ../infra
      dockerfile: Dockerfile
    environment:
      MONGODB_URI: ${MONGO_URI}
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
      AMQP_HOST: ${AMQP_HOST}
      AMQP_PORT: ${AMQP_PORT}
      AMQP_URL: ${AMQP_URL}
      AMQP_USERNAME: ${AMQP_USERNAME}
      AMQP_PASSWORD: ${AMQP_PASSWORD}
      WORKERS_SERVICE_URL: ${WORKERS_SERVICE_URL}
      AUTH0_ISSUER_BASE_URL: ${AUTH0_ISSUER_BASE_URL}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      
    ports:
      - 4002:4000
      - 9228:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped
    volumes:
      - ../infra:/app
      - /app/node_modules
 

  inventory:
    build:
      context: ../inventory
      dockerfile: Dockerfile
    environment:
      MONGODB_URI: ${MONGO_URI}
      DB_NAME: ${DB_NAME}
    ports:
      - 4003:4000
      - 9227:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped
    volumes:
      - ../inventory:/app
      - /app/node_modules


  orders:
    build:
      context: ../orders
      dockerfile: Dockerfile
    environment:
      AMQP_HOST: ${AMQP_HOST}
      AMQP_PORT: ${AMQP_PORT}
      AMQP_URL: ${AMQP_URL}
      AMQP_USERNAME: ${AMQP_USERNAME}
      AMQP_PASSWORD: ${AMQP_PASSWORD}
      MONGODB_URI: ${MONGO_URI}
      ENV: ${ENV}
      MAILGUN_EMAIL: ${MAILGUN_EMAIL}
    ports:
      - 4004:4000
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped
    volumes:
      - ../orders:/app
      - /app/node_modules



  website:
    build:
      context: ../website
      dockerfile: Dockerfile
    environment:
      VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
      VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
      VITE_AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      VITE_INFRA_SERVER_URL: ${VITE_INFRA_SERVER_URL}
      VITE_WORKERS_SERVER_URL: ${VITE_WORKERS_SERVER_URL}
      VITE_SERVER_URL: ${VITE_INFRA_SERVER_URL}
      VITE_BUSINESSID: ${VITE_BUSINESSID}
      VITE_MANAGERID: ${VITE_MANAGERID}
      VITE_BASE_API_URL: ${VITE_BASE_API_URL}
      VITE_HTTP: ${VITE_HTTP}
      
    ports:
      - "4005:5173"
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped
    volumes:
      - ../website:/app
      - /app/node_modules


  workers:
    build:
      context: ../workers
      dockerfile: Dockerfile
    environment:
      RABBITMQ_EXCHANGE_NAME: ${RABBITMQ_EXCHANGE_NAME}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
      AMQP_URL: ${AMQP_URL}
      AMQP_USERNAME: ${AMQP_USERNAME}
      AMQP_PASSWORD: ${AMQP_PASSWORD}
      AMQP_HOST: ${AMQP_HOST}
      AMQP_PORT: ${AMQP_PORT}
      MONGODB_URI: ${MONGO_URI}
      AUTH0_ISSUER_BASE_URL: ${AUTH0_ISSUER_BASE_URL}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
    ports:
      - 4006:4000
      - 9224:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    restart: unless-stopped
    volumes:
      - ../workers:/app
      - /app/node_modules


  mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - ./database:/data/db
    networks:
      - nesjs-network
    restart: always

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${AMQP_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
    ports:
      - "5673:5672"
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq
      - ./rabbitmq/log/:/var/log/rabbitmq
    networks:
      - nesjs-network
    restart: always

networks:
  nesjs-network:
    driver: bridge
