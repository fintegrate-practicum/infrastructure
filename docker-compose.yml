version: '3.8'
services:
  dev:
    container_name: nestjs_api_dev_communication
    image: nestjs-api-dev:1.0.0
    command: sh -c "(curl -sL https://netfree.link/dl/unix-ca.sh | sh ) && export NODE_EXTRA_CA_CERTS=/etc/ca-bundle.crt && npm install && npm start"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 4000:4156
      - 3001:9229
    networks:
      - nesjs-network
    depends_on:
      - mongodb
    # volumes:
    #   - .:/usr/src/app
    #   - /usr/src/app/node_modules
    restart: unless-stopped
  mongodb:
    image : mongo:latest
    container_name: mongodb_communication
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${Fintegrate}
      MONGO_INITDB_ROOT_PASSWORD: ${BSR4Practicum2024}
      MONGO_INITDB_DATABASE: ${Communication}
    
    ports:
      - 27017:27017
    volumes:
      - ./database:/data/db
    
    networks:
      - nesjs-network
    restart: always
  prod:
    container_name: nestjs_api_prod_communication
    image: nestjs-api-prod:1.0.0
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:prod
    ports:
      - 4001:4156
      - 9229:9229
    networks:
      - nesjs-network
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - nesjs-network
networks:
  nesjs-network:
    driver: bridge

